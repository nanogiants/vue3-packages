name: Deploy on NPM

on:
  push:
    branches:
      - main

jobs:
  install_deps:
    name: 'Install dependencies'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Cache node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm i

  lint:
    name: 'Lint'
    runs-on: ubuntu-latest
    needs: install_deps
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Lint Projectfiles
        run: npm run lint

  test:
    name: 'Test'
    runs-on: ubuntu-latest
    needs: install_deps
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Running Tests
        run: npm run test

  build_and_deploy:
    runs-on: ubuntu-latest
    needs: [install_deps, lint, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Build Library
        run: npm run build
      - name: Get package.json Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - name: Echo package.json version
        run: echo "${{ steps.package-version.outputs.current-version }}"
      - name: Publish to Npm
        id: publish
        uses: JS-DevTools/npm-publish@v1
        with:
          package: ./package.json
          token: ${{ secrets.NPM_TOKEN }}
          check-version: 'true'
      - name: Show version change
        if: steps.publish.outputs.type != 'none'
        run: |
          echo "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"
